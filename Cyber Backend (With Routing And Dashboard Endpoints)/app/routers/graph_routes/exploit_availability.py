from fastapi import APIRouter, HTTPException
from connection.connection import get_uploaded_files_collection
from utils.aggregations import latest_vuln_stages

router = APIRouter()

@router.get("/exploit-availability")
async def get_exploit_availability():
    try:
        collection = await get_uploaded_files_collection()
        pipeline = latest_vuln_stages + [
            {"$group": {
                "_id": "$Exploit?",
                "count": {"$sum": 1}
            }},
            {"$project": {
                "status": {
                    "$cond": [
                        {"$eq": ["$_id", "Yes"]},
                        "Exploit Available",
                        "No Known Exploit"
                    ]
                },
                "count": 1,
                "_id": 0
            }}
        ]
        cursor = collection.aggregate(pipeline)
        results = await cursor.to_list(length=None)
        return results
    except Exception as e:
        raise HTTPException(500, f"Error: {str(e)}")